buildscript {
    repositories {
        mavenCentral()
    }

    ext.kotlin_version = '1.0.0'

    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE')
        classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
// tag::plugin[]
apply plugin: 'docker'
// end::plugin[]

// This is used as the docker image prefix (org)
group = 'skinny'

jar {
    baseName = 'gs-spring-boot-docker'
    version =  '0.1.0'
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

task buildDocker(type: Docker, dependsOn: build) {
  push = false
  applicationName = jar.baseName
  dockerfile = file('src/main/docker/Dockerfile')
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "org.assertj:assertj-core:3.3.0"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

buildscript {
    repositories {
        mavenCentral()
    }

    ext.kotlin_version = '1.0.1-2'

    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE')
        classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
// tag::plugin[]
apply plugin: 'docker'
// end::plugin[]

// This is used as the docker image prefix (org)
group = 'skinny'
version = '0.3.0'

jar {
    archiveName "${baseName}.${extension}"
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = project.name
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

repositories {
    mavenCentral()

    maven {
        url "http://repository.jetbrains.com/all"
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-hateoas"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.boot:spring-boot-starter-data-rest"
    compile "org.springframework.boot:spring-boot-devtools"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    runtime "org.hsqldb:hsqldb"
    compile "org.flywaydb:flyway-core"
    compile 'mysql:mysql-connector-java:5.1.38'

    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "org.assertj:assertj-core:3.3.0"
    testCompile 'org.jetbrains.spek:spek:0.1.195'
    testCompile 'org.codehaus.groovy:groovy-all:2.3.11'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.3'
    testCompile 'org.spockframework:spock-spring:1.0-groovy-2.3'
}

// make sure Intellij compiles the classes to the Gradle build directory for the
// Spring Boot DevTools restarting detection to work
idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}
